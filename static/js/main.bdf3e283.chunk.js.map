{"version":3,"sources":["reducers/index.js","store.js","components/field-item/field-item.js","components/field/field.js","actions/index.js","components/field/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["initialState","fieldItems","id","isClose","color","compareArr","clicks","openingItems","click","checkMatch","arr","arr2","map","elem","forEach","el","opened","checkItems","state","newFieldItems","newCompareArr","newOpening","length","getClearField","addToComparison","item","reducer","action","type","payload","store","createStore","composeWithDevTools","connect","onItemCompare","getCheck","clear","styles","close","backgroundColor","border","open","transformStyle","animation","animationDirection","style","className","onClick","setTimeout","mapDispatchToProps","Field","items","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdf3e283.chunk.js","sourcesContent":["const initialState = {\n  fieldItems: [\n    {\n      id: 1,\n      isClose: true,\n      color: \"#ebe700\",\n    },\n    {\n      id: 2,\n      isClose: true,\n      color: \"#fa1850\",\n    },\n    {\n      id: 3,\n      isClose: true,\n      color: \"#09e7d5\",\n    },\n    {\n      id: 4,\n      isClose: true,\n      color: \"#ebe700\",\n    },\n    {\n      id: 5,\n      isClose: true,\n      color: \"#010e57\",\n    },\n    {\n      id: 6,\n      isClose: true,\n      color: \"#fa1850\",\n    },\n    {\n      id: 7,\n      isClose: true,\n      color: \"#09e7d5\",\n    },\n    {\n      id: 8,\n      isClose: true,\n      color: \"#010e57\",\n    },\n    {\n      id: 9,\n      isClose: true,\n      color: \"#006329\",\n    },\n    {\n      id: 10,\n      isClose: true,\n      color: \"#320550\",\n    },\n    {\n      id: 11,\n      isClose: true,\n      color: \"#589e09fd\",\n    },\n    {\n      id: 12,\n      isClose: true,\n      color: \"#006329\",\n    },\n    {\n      id: 13,\n      isClose: true,\n      color: \"#706500fd\",\n    },\n    {\n      id: 14,\n      isClose: true,\n      color: \"#589e09fd\",\n    },\n    {\n      id: 15,\n      isClose: true,\n      color: \"#320550\",\n    },\n    {\n      id: 16,\n\n      isClose: true,\n      color: \"#706500fd\",\n    },\n  ],\n  compareArr: [],\n  clicks: 1,\n  openingItems: [],\n};\nlet click = 1;\nlet newe = [];\nconst checkMatch = (arr, arr2) => {\n  let updateArr = arr.map((elem) => {\n    arr2.forEach((el) => {\n      if (elem.color == el.color) {\n        elem.isClose = false;\n        elem.opened = true;\n      } else {\n        elem.isClose = true;\n      }\n    });\n    return elem;\n  });\n  return updateArr;\n};\n\nconst checkItems = (state) => {\n  const { fieldItems, compareArr, openingItems } = state;\n  let newFieldItems;\n  let newCompareArr;\n  let newOpening = [...openingItems];\n  if (compareArr.length >= 2) {\n    if (\n      compareArr[0].color === compareArr[1].color &&\n      compareArr[0].id !== compareArr[1].id\n    ) {\n      newOpening = [...openingItems, compareArr[0]];\n      click = 1;\n      newCompareArr = [];\n      newFieldItems = checkMatch(fieldItems, newOpening);\n    } else {\n      click = 1;\n      newFieldItems = checkMatch(fieldItems, newOpening);\n      newCompareArr = [];\n      return {\n        ...state,\n        fieldItems: newFieldItems,\n        clicks: click,\n        compareArr: [],\n      };\n    }\n    return {\n      ...state,\n      openingItems: newOpening,\n      fieldItems: newFieldItems,\n      clicks: click,\n      compareArr: [],\n    };\n  } else {\n    newCompareArr = [];\n    newFieldItems = checkMatch(fieldItems, newOpening);\n    return {\n      ...state,\n      fieldItems: newFieldItems,\n      clicks: click,\n      compareArr: newCompareArr,\n    };\n  }\n};\nconst getClearField = (state) => {\n  const { fieldItems } = state;\n\n  return {\n    ...state,\n    fieldItems: fieldItems.map((elem) => {\n      if (elem.opened) {\n        elem.isClose = false;\n      } else {\n        elem.isClose = true;\n      }\n      return elem;\n    }),\n  };\n};\nconst addToComparison = (state, item) => {\n  click++;\n  const { fieldItems, compareArr } = state;\n  if (click < 4) {\n    return {\n      ...state,\n      fieldItems: fieldItems.map((elem) => {\n        if (elem.id === item.id) {\n          elem.isClose = false;\n        }\n        return elem;\n      }),\n      compareArr: [...compareArr, item],\n      clicks: click,\n    };\n  } else {\n    return {\n      ...state,\n    };\n  }\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ITEM_ADD_TO_COMPARISON\":\n      return addToComparison(state, action.payload);\n    case \"ITEM_GET_CHECK\":\n      return checkItems(state, action.payload); //\n\n    case \"GET_CLEAR_FIELD\":\n      return getClearField(state, action.payload);\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","// import { createStore } from 'redux';\n\nimport reducer from './reducers';\nimport { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools()\n);\nexport default store;","import \"./field-item.css\";\nimport React from \"react\";\n\nimport { connect } from \"react-redux\";\nconst FieldItem = ({ onItemCompare, getCheck, clear, item, clicks }) => {\n  const styles = {\n    close: {\n      backgroundColor: \"white\",\n      border: \"1px solid black\",\n    },\n    open: {\n      border: \"1px solid black\",\n      backgroundColor: item.color,\n      transformStyle: \"preserve-3d\",\n      animation: \"anim 0.4s 1 linear\",\n      animationDirection: \"normal\",\n    },\n  };\n  const handlerClick = () => {\n    onItemCompare();\n    if (clicks === 2) {\n     setTimeout(() => {\n        getCheck();\n        clear();\n      }, 600);\n    } \n  };\n\n  return (\n    <div\n      style={item.isClose ? styles.close : styles.open}\n      className=\"field-item\"\n      onClick={handlerClick}\n    ></div>\n  );\n};\n\nconst mapStateToProps = ({ clicks }) => {\n  return {\n    clicks: clicks,\n  };\n};\n\nexport default connect(mapStateToProps, null)(FieldItem);\n","import React from \"react\";\nimport FieldItem from \"../field-item/field-item\";\nimport { itemCompare, getCheck, clear } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport \"./field.css\";\n\nconst Field = ({ items, onItemCompare, getCheck, clear }) => {\n\n  return (\n    <div className=\"field-wrap\">\n    \n      {items.map((item) =>\n      (\n          <FieldItem \n          key={item.id} \n          onItemCompare={() => onItemCompare(item) }\n          getCheck={ () => getCheck(item)}\n          clear={ () => clear()}\n          item={item}\n           />\n      ))}\n    </div>\n  );\n};\n\n\nconst mapStateToProps = ({ fieldItems }) => {\n  return {\n    items: fieldItems,\n  };\n};\nconst mapDispatchToProps = {\n  onItemCompare: itemCompare,\n  getCheck: getCheck,\n  clear: clear,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Field);\n","export const itemCompare = (item) => {\n  return {\n    type: \"ITEM_ADD_TO_COMPARISON\",\n    payload: item,\n  };\n};\nexport const getCheck = (item) => {\n  return {\n    type: \"ITEM_GET_CHECK\",\n     payload: item,\n  }\n}\n\nexport const clear = (item) => {\n  return {\n    type: \"GET_CLEAR_FIELD\",\n     payload: item,\n  }\n}\n\n","import Field from './field';\n\nexport default Field;","import App from './app';\n\nexport default App;","import React from 'react';\nimport Field from '../field';\n\nimport './app.css';\nconst App = () => {\n  return (\n    <main >\n      <Field />\n    </main>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./components/app\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}